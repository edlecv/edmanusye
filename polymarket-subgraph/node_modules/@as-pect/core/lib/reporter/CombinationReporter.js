/**
 * This reporter is used to combine a set of reporters into a single reporter object. It uses
 * forEach() to call each reporter's function when each method is called.
 */
export class CombinationReporter {
    reporters;
    constructor(reporters) {
        this.reporters = reporters;
    }
    get stdout() {
        return this.reporters[0].stdout;
    }
    get stderr() {
        return this.reporters[0].stderr;
    }
    set stdout(writer) {
        this.reporters.forEach((e) => (e.stdout = writer));
    }
    set stderr(writer) {
        this.reporters.forEach((e) => (e.stdout = writer));
    }
    onEnter(ctx, node) {
        this.reporters.forEach((e) => e.onEnter(ctx, node));
    }
    onExit(ctx, node) {
        this.reporters.forEach((e) => e.onExit(ctx, node));
    }
    onFinish(ctx) {
        this.reporters.forEach((e) => e.onFinish(ctx));
    }
}
//# sourceMappingURL=CombinationReporter.js.map