{"ast":null,"code":"import React from'react';import gridData from'../data/optimal_strategies_grid.json';import{Card,CardContent,CardHeader,CardTitle}from\"./ui/card\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultsGrid=()=>{const{win_rates,risk_ratios,grid}=gridData;// Helper to format strategy names for display\nconst formatStrategyName=name=>{if(!name)return'-';return name.split('_').map(word=>word.charAt(0).toUpperCase()+word.slice(1)).join(' ');};const getCellClass=note=>{if(!note)return\"bg-gray-100\";if(note.includes(\"Optimal (Ruin Prob <= 1%)\"))return\"bg-green-100 dark:bg-green-900\";if(note.includes(\"Sub-Optimal (Ruin Prob <= 5%)\"))return\"bg-yellow-100 dark:bg-yellow-800\";if(note.includes(\"High Risk\"))return\"bg-orange-100 dark:bg-orange-800\";if(note.includes(\"Very High Risk\"))return\"bg-red-100 dark:bg-red-900\";return\"bg-gray-100 dark:bg-gray-700\";};return/*#__PURE__*/_jsxs(Card,{className:\"mt-6\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{children:\"Optimal Strategy Grid (Win Rate vs. Risk Ratio)\"})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-4 text-sm text-muted-foreground\",children:\"Displaying the optimal strategy based on Profit/EMDD ratio, prioritizing low ruin probability (<=1%, then <=5%). Fixed parameters for these simulations: Initial Balance 1000, Rounds 1000, Base Bet 10, Max Bet % 100%, Max Bet Size 1000, L_cd/W_cd 1.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 border border-gray-300 dark:border-gray-600\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50 dark:bg-gray-800\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-r dark:border-gray-600\",children:\"Win Rate\"}),risk_ratios.map(rr=>/*#__PURE__*/_jsxs(\"th\",{className:\"px-3 py-2 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-r dark:border-gray-600\",children:[\"RR: \",rr]},rr))]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\",children:win_rates.map(wr=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50 dark:hover:bg-gray-800\",children:[/*#__PURE__*/_jsxs(\"td\",{className:\"px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100 border-r dark:border-gray-600\",children:[\"WR: \",wr]}),risk_ratios.map(rr=>{const cell=grid[wr.toString()]&&grid[wr.toString()][rr.toString()];return/*#__PURE__*/_jsx(\"td\",{className:\"px-3 py-2 whitespace-normal text-xs border-r dark:border-gray-600 \".concat(getCellClass(cell===null||cell===void 0?void 0:cell.note)),children:cell?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center text-center\",children:[/*#__PURE__*/_jsx(\"strong\",{className:\"block font-semibold text-gray-800 dark:text-gray-200\",children:formatStrategyName(cell.strategy)}),/*#__PURE__*/_jsxs(\"span\",{className:\"block text-gray-600 dark:text-gray-400\",children:[\"P/EMDD: \",cell.pemdd_ratio]}),/*#__PURE__*/_jsxs(\"span\",{className:\"block text-gray-600 dark:text-gray-400\",children:[\"Ruin: \",(cell.ruin_prob*100).toFixed(2),\"%\"]})]}):/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-400 dark:text-gray-600\",children:\"-\"})},\"\".concat(wr,\"-\").concat(rr));})]},wr))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-semibold mb-2\",children:\"Legend for Cell Background:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 text-xs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-4 h-4 mr-1 bg-green-100 dark:bg-green-900 border dark:border-green-700\"}),\" Optimal (Ruin <=1%)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-4 h-4 mr-1 bg-yellow-100 dark:bg-yellow-800 border dark:border-yellow-600\"}),\" Sub-Optimal (Ruin <=5%)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-4 h-4 mr-1 bg-orange-100 dark:bg-orange-800 border dark:border-orange-600\"}),\" High Risk (Ruin >5%, Positive Profit)\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-4 h-4 mr-1 bg-red-100 dark:bg-red-900 border dark:border-red-700\"}),\" Very High Risk (Negative Profit or High Ruin)\"]})]})]})]})]});};export default ResultsGrid;","map":{"version":3,"names":["React","gridData","Card","CardContent","CardHeader","CardTitle","jsx","_jsx","jsxs","_jsxs","ResultsGrid","win_rates","risk_ratios","grid","formatStrategyName","name","split","map","word","charAt","toUpperCase","slice","join","getCellClass","note","includes","className","children","rr","wr","cell","toString","concat","strategy","pemdd_ratio","ruin_prob","toFixed"],"sources":["/home/ubuntu/strategy-simulator/src/components/ResultsGrid.jsx"],"sourcesContent":["import React from 'react';\nimport gridData from '../data/optimal_strategies_grid.json';\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\n\nconst ResultsGrid = () => {\n  const { win_rates, risk_ratios, grid } = gridData;\n\n  // Helper to format strategy names for display\n  const formatStrategyName = (name) => {\n    if (!name) return '-';\n    return name.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n  };\n  \n  const getCellClass = (note) => {\n    if (!note) return \"bg-gray-100\";\n    if (note.includes(\"Optimal (Ruin Prob <= 1%)\")) return \"bg-green-100 dark:bg-green-900\";\n    if (note.includes(\"Sub-Optimal (Ruin Prob <= 5%)\")) return \"bg-yellow-100 dark:bg-yellow-800\";\n    if (note.includes(\"High Risk\")) return \"bg-orange-100 dark:bg-orange-800\";\n    if (note.includes(\"Very High Risk\")) return \"bg-red-100 dark:bg-red-900\";\n    return \"bg-gray-100 dark:bg-gray-700\";\n  };\n\n  return (\n    <Card className=\"mt-6\">\n      <CardHeader>\n        <CardTitle>Optimal Strategy Grid (Win Rate vs. Risk Ratio)</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p className=\"mb-4 text-sm text-muted-foreground\">\n          Displaying the optimal strategy based on Profit/EMDD ratio, prioritizing low ruin probability (&lt;=1%, then &lt;=5%). Fixed parameters for these simulations: Initial Balance 1000, Rounds 1000, Base Bet 10, Max Bet % 100%, Max Bet Size 1000, L_cd/W_cd 1.\n        </p>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700 border border-gray-300 dark:border-gray-600\">\n            <thead className=\"bg-gray-50 dark:bg-gray-800\">\n              <tr>\n                <th className=\"px-3 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-r dark:border-gray-600\">Win Rate</th>\n                {risk_ratios.map(rr => (\n                  <th key={rr} className=\"px-3 py-2 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider border-r dark:border-gray-600\">RR: {rr}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\">\n              {win_rates.map(wr => (\n                <tr key={wr} className=\"hover:bg-gray-50 dark:hover:bg-gray-800\">\n                  <td className=\"px-3 py-2 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-gray-100 border-r dark:border-gray-600\">WR: {wr}</td>\n                  {risk_ratios.map(rr => {\n                    const cell = grid[wr.toString()] && grid[wr.toString()][rr.toString()];\n                    return (\n                      <td key={`${wr}-${rr}`} className={`px-3 py-2 whitespace-normal text-xs border-r dark:border-gray-600 ${getCellClass(cell?.note)}`}>\n                        {cell ? (\n                          <div className='flex flex-col items-center text-center'>\n                            <strong className=\"block font-semibold text-gray-800 dark:text-gray-200\">{formatStrategyName(cell.strategy)}</strong>\n                            <span className=\"block text-gray-600 dark:text-gray-400\">P/EMDD: {cell.pemdd_ratio}</span>\n                            <span className=\"block text-gray-600 dark:text-gray-400\">Ruin: {(cell.ruin_prob * 100).toFixed(2)}%</span>\n                            {/* <span className=\"block text-xs text-gray-500 dark:text-gray-500 mt-1\">{cell.note}</span> */}\n                          </div>\n                        ) : (\n                          <span className=\"text-gray-400 dark:text-gray-600\">-</span>\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"mt-4\">\n            <h4 className=\"text-sm font-semibold mb-2\">Legend for Cell Background:</h4>\n            <div className=\"flex flex-wrap gap-2 text-xs\">\n                <div className=\"flex items-center\"><span className=\"w-4 h-4 mr-1 bg-green-100 dark:bg-green-900 border dark:border-green-700\"></span> Optimal (Ruin &lt;=1%)</div>\n                <div className=\"flex items-center\"><span className=\"w-4 h-4 mr-1 bg-yellow-100 dark:bg-yellow-800 border dark:border-yellow-600\"></span> Sub-Optimal (Ruin &lt;=5%)</div>\n                <div className=\"flex items-center\"><span className=\"w-4 h-4 mr-1 bg-orange-100 dark:bg-orange-800 border dark:border-orange-600\"></span> High Risk (Ruin >5%, Positive Profit)</div>\n                <div className=\"flex items-center\"><span className=\"w-4 h-4 mr-1 bg-red-100 dark:bg-red-900 border dark:border-red-700\"></span> Very High Risk (Negative Profit or High Ruin)</div>\n            </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ResultsGrid;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}