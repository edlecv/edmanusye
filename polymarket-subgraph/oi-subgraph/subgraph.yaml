specVersion: 0.0.4
description: oi-subgraph
repository: https://github.com/Polymarket/polymarket-subgraph
schema:
  file: ./schema.graphql
features:
  - grafting
dataSources:
  - kind: ethereum/contract
    name: ConditionalTokens
    network: matic
    source:
      address: '0x4D97DCd97eC945f40cF65F87097ACe5EA0476045'
      abi: ConditionalTokens
      startBlock: 4023686
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Condition
        - MarketOpenInterest
        - GlobalOpenInterest
      abis:
        - name: ConditionalTokens
          file: ../abis/ConditionalTokens.json
      eventHandlers:
        - event: PositionSplit(indexed address,address,indexed bytes32,indexed bytes32,uint256[],uint256)
          handler: handlePositionSplit
        - event: PositionsMerge(indexed address,address,indexed bytes32,indexed bytes32,uint256[],uint256)
          handler: handlePositionsMerge
        - event: PayoutRedemption(indexed address,indexed address,indexed bytes32,bytes32,uint256[],uint256)
          handler: handlePayoutRedemption
        - event: ConditionPreparation(indexed bytes32,indexed address,indexed bytes32,uint256)
          handler: handleConditionPreparation
      file: ./src/ConditionalTokensMapping.ts
  - kind: ethereum/contract
    name: NegRiskAdapter
    network: matic
    source:
      address: '0xd91E80cF2E7be2e162c6513ceD06f1dD0dA35296'
      abi: NegRiskAdapter
      startBlock: 50505403
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Condition
        - NegRiskEvent
        - MarketOpenInterest
        - GlobalOpenInterest
      abis:
        - name: NegRiskAdapter
          file: ../abis/NegRiskAdapter.json
      eventHandlers:
        - event: PositionSplit(indexed address,indexed bytes32,uint256)
          handler: handlePositionSplit
        - event: PositionsMerge(indexed address,indexed bytes32,uint256)
          handler: handlePositionsMerge
        - event: PayoutRedemption(indexed address,indexed bytes32,uint256[],uint256)
          handler: handlePayoutRedemption
        - event: PositionsConverted(indexed address,indexed bytes32,indexed uint256,uint256)
          handler: handlePositionsConverted
        - event: MarketPrepared(indexed bytes32,indexed address,uint256,bytes)
          handler: handleMarketPrepared
        - event: QuestionPrepared(indexed bytes32,indexed bytes32,uint256,bytes)
          handler: handleQuestionPrepared
      file: ./src/NegRiskAdapterMapping.ts