// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class BondUpdated extends ethereum.Event {
  get params(): BondUpdated__Params {
    return new BondUpdated__Params(this);
  }
}

export class BondUpdated__Params {
  _event: BondUpdated;

  constructor(event: BondUpdated) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get updatedBond(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GameCanceled extends ethereum.Event {
  get params(): GameCanceled__Params {
    return new GameCanceled__Params(this);
  }
}

export class GameCanceled__Params {
  _event: GameCanceled;

  constructor(event: GameCanceled) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class GameCreated extends ethereum.Event {
  get params(): GameCreated__Params {
    return new GameCreated__Params(this);
  }
}

export class GameCreated__Params {
  _event: GameCreated;

  constructor(event: GameCreated) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get ordering(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get ancillaryData(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GameEmergencySettled extends ethereum.Event {
  get params(): GameEmergencySettled__Params {
    return new GameEmergencySettled__Params(this);
  }
}

export class GameEmergencySettled__Params {
  _event: GameEmergencySettled;

  constructor(event: GameEmergencySettled) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get home(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get away(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GamePaused extends ethereum.Event {
  get params(): GamePaused__Params {
    return new GamePaused__Params(this);
  }
}

export class GamePaused__Params {
  _event: GamePaused;

  constructor(event: GamePaused) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class GameReset extends ethereum.Event {
  get params(): GameReset__Params {
    return new GameReset__Params(this);
  }
}

export class GameReset__Params {
  _event: GameReset;

  constructor(event: GameReset) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class GameSettled extends ethereum.Event {
  get params(): GameSettled__Params {
    return new GameSettled__Params(this);
  }
}

export class GameSettled__Params {
  _event: GameSettled;

  constructor(event: GameSettled) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get home(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get away(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GameUnpaused extends ethereum.Event {
  get params(): GameUnpaused__Params {
    return new GameUnpaused__Params(this);
  }
}

export class GameUnpaused__Params {
  _event: GameUnpaused;

  constructor(event: GameUnpaused) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class LivenessUpdated extends ethereum.Event {
  get params(): LivenessUpdated__Params {
    return new LivenessUpdated__Params(this);
  }
}

export class LivenessUpdated__Params {
  _event: LivenessUpdated;

  constructor(event: LivenessUpdated) {
    this._event = event;
  }

  get gameId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get updatedLiveness(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MarketCreated extends ethereum.Event {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get marketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get gameId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get conditionId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get marketType(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get underdog(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get line(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class MarketEmergencyResolved extends ethereum.Event {
  get params(): MarketEmergencyResolved__Params {
    return new MarketEmergencyResolved__Params(this);
  }
}

export class MarketEmergencyResolved__Params {
  _event: MarketEmergencyResolved;

  constructor(event: MarketEmergencyResolved) {
    this._event = event;
  }

  get marketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get payouts(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class MarketPaused extends ethereum.Event {
  get params(): MarketPaused__Params {
    return new MarketPaused__Params(this);
  }
}

export class MarketPaused__Params {
  _event: MarketPaused;

  constructor(event: MarketPaused) {
    this._event = event;
  }

  get marketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class MarketResolved extends ethereum.Event {
  get params(): MarketResolved__Params {
    return new MarketResolved__Params(this);
  }
}

export class MarketResolved__Params {
  _event: MarketResolved;

  constructor(event: MarketResolved) {
    this._event = event;
  }

  get marketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get payouts(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class MarketUnpaused extends ethereum.Event {
  get params(): MarketUnpaused__Params {
    return new MarketUnpaused__Params(this);
  }
}

export class MarketUnpaused__Params {
  _event: MarketUnpaused;

  constructor(event: MarketUnpaused) {
    this._event = event;
  }

  get marketId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdminAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemovedAdmin extends ethereum.Event {
  get params(): RemovedAdmin__Params {
    return new RemovedAdmin__Params(this);
  }
}

export class RemovedAdmin__Params {
  _event: RemovedAdmin;

  constructor(event: RemovedAdmin) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get removedAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UmaSportsOracle__getGameResultValue0Struct extends ethereum.Tuple {
  get creator(): Address {
    return this[0].toAddress();
  }

  get state(): i32 {
    return this[1].toI32();
  }

  get ordering(): i32 {
    return this[2].toI32();
  }

  get homeScore(): BigInt {
    return this[3].toBigInt();
  }

  get awayScore(): BigInt {
    return this[4].toBigInt();
  }

  get token(): Address {
    return this[5].toAddress();
  }

  get reward(): BigInt {
    return this[6].toBigInt();
  }

  get bond(): BigInt {
    return this[7].toBigInt();
  }

  get liveness(): BigInt {
    return this[8].toBigInt();
  }

  get timestamp(): BigInt {
    return this[9].toBigInt();
  }

  get ancillaryData(): Bytes {
    return this[10].toBytes();
  }

  get reset(): boolean {
    return this[11].toBoolean();
  }

  get refund(): boolean {
    return this[12].toBoolean();
  }
}

export class UmaSportsOracle__getMarketResultValue0Struct extends ethereum.Tuple {
  get gameId(): Bytes {
    return this[0].toBytes();
  }

  get state(): i32 {
    return this[1].toI32();
  }

  get marketType(): i32 {
    return this[2].toI32();
  }

  get line(): BigInt {
    return this[3].toBigInt();
  }

  get underdog(): i32 {
    return this[4].toI32();
  }
}

export class UmaSportsOracle extends ethereum.SmartContract {
  static bind(address: Address): UmaSportsOracle {
    return new UmaSportsOracle("UmaSportsOracle", address);
  }

  IDENTIFIER(): Bytes {
    let result = super.call("IDENTIFIER", "IDENTIFIER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_IDENTIFIER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("IDENTIFIER", "IDENTIFIER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  addressWhitelist(): Address {
    let result = super.call(
      "addressWhitelist",
      "addressWhitelist():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_addressWhitelist(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "addressWhitelist",
      "addressWhitelist():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  admins(param0: Address): BigInt {
    let result = super.call("admins", "admins(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_admins(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("admins", "admins(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createGame(
    ancillaryData: Bytes,
    ordering: i32,
    token: Address,
    reward: BigInt,
    bond: BigInt,
    liveness: BigInt,
  ): Bytes {
    let result = super.call(
      "createGame",
      "createGame(bytes,uint8,address,uint256,uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromBytes(ancillaryData),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ordering)),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(reward),
        ethereum.Value.fromUnsignedBigInt(bond),
        ethereum.Value.fromUnsignedBigInt(liveness),
      ],
    );

    return result[0].toBytes();
  }

  try_createGame(
    ancillaryData: Bytes,
    ordering: i32,
    token: Address,
    reward: BigInt,
    bond: BigInt,
    liveness: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createGame",
      "createGame(bytes,uint8,address,uint256,uint256,uint256):(bytes32)",
      [
        ethereum.Value.fromBytes(ancillaryData),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(ordering)),
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(reward),
        ethereum.Value.fromUnsignedBigInt(bond),
        ethereum.Value.fromUnsignedBigInt(liveness),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createSpreadsMarket(gameId: Bytes, underdog: i32, line: BigInt): Bytes {
    let result = super.call(
      "createSpreadsMarket",
      "createSpreadsMarket(bytes32,uint8,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(gameId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(underdog)),
        ethereum.Value.fromUnsignedBigInt(line),
      ],
    );

    return result[0].toBytes();
  }

  try_createSpreadsMarket(
    gameId: Bytes,
    underdog: i32,
    line: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createSpreadsMarket",
      "createSpreadsMarket(bytes32,uint8,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(gameId),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(underdog)),
        ethereum.Value.fromUnsignedBigInt(line),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createTotalsMarket(gameId: Bytes, line: BigInt): Bytes {
    let result = super.call(
      "createTotalsMarket",
      "createTotalsMarket(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(gameId),
        ethereum.Value.fromUnsignedBigInt(line),
      ],
    );

    return result[0].toBytes();
  }

  try_createTotalsMarket(
    gameId: Bytes,
    line: BigInt,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createTotalsMarket",
      "createTotalsMarket(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(gameId),
        ethereum.Value.fromUnsignedBigInt(line),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createWinnerMarket(gameId: Bytes): Bytes {
    let result = super.call(
      "createWinnerMarket",
      "createWinnerMarket(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(gameId)],
    );

    return result[0].toBytes();
  }

  try_createWinnerMarket(gameId: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createWinnerMarket",
      "createWinnerMarket(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(gameId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ctf(): Address {
    let result = super.call("ctf", "ctf():(address)", []);

    return result[0].toAddress();
  }

  try_ctf(): ethereum.CallResult<Address> {
    let result = super.tryCall("ctf", "ctf():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGame(gameId: Bytes): UmaSportsOracle__getGameResultValue0Struct {
    let result = super.call(
      "getGame",
      "getGame(bytes32):((address,uint8,uint8,uint32,uint32,address,uint256,uint256,uint256,uint256,bytes,bool,bool))",
      [ethereum.Value.fromFixedBytes(gameId)],
    );

    return changetype<UmaSportsOracle__getGameResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getGame(
    gameId: Bytes,
  ): ethereum.CallResult<UmaSportsOracle__getGameResultValue0Struct> {
    let result = super.tryCall(
      "getGame",
      "getGame(bytes32):((address,uint8,uint8,uint32,uint32,address,uint256,uint256,uint256,uint256,bytes,bool,bool))",
      [ethereum.Value.fromFixedBytes(gameId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UmaSportsOracle__getGameResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getMarket(marketId: Bytes): UmaSportsOracle__getMarketResultValue0Struct {
    let result = super.call(
      "getMarket",
      "getMarket(bytes32):((bytes32,uint8,uint8,uint256,uint8))",
      [ethereum.Value.fromFixedBytes(marketId)],
    );

    return changetype<UmaSportsOracle__getMarketResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getMarket(
    marketId: Bytes,
  ): ethereum.CallResult<UmaSportsOracle__getMarketResultValue0Struct> {
    let result = super.tryCall(
      "getMarket",
      "getMarket(bytes32):((bytes32,uint8,uint8,uint256,uint8))",
      [ethereum.Value.fromFixedBytes(marketId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UmaSportsOracle__getMarketResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  isAdmin(addr: Address): boolean {
    let result = super.call("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(addr),
    ]);

    return result[0].toBoolean();
  }

  try_isAdmin(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAdmin", "isAdmin(address):(bool)", [
      ethereum.Value.fromAddress(addr),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  optimisticOracle(): Address {
    let result = super.call(
      "optimisticOracle",
      "optimisticOracle():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_optimisticOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "optimisticOracle",
      "optimisticOracle():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _ctf(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _optimisticOracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _addressWhitelist(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAdminCall extends ethereum.Call {
  get inputs(): AddAdminCall__Inputs {
    return new AddAdminCall__Inputs(this);
  }

  get outputs(): AddAdminCall__Outputs {
    return new AddAdminCall__Outputs(this);
  }
}

export class AddAdminCall__Inputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAdminCall__Outputs {
  _call: AddAdminCall;

  constructor(call: AddAdminCall) {
    this._call = call;
  }
}

export class CreateGameCall extends ethereum.Call {
  get inputs(): CreateGameCall__Inputs {
    return new CreateGameCall__Inputs(this);
  }

  get outputs(): CreateGameCall__Outputs {
    return new CreateGameCall__Outputs(this);
  }
}

export class CreateGameCall__Inputs {
  _call: CreateGameCall;

  constructor(call: CreateGameCall) {
    this._call = call;
  }

  get ancillaryData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get ordering(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get reward(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get bond(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get liveness(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateGameCall__Outputs {
  _call: CreateGameCall;

  constructor(call: CreateGameCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateSpreadsMarketCall extends ethereum.Call {
  get inputs(): CreateSpreadsMarketCall__Inputs {
    return new CreateSpreadsMarketCall__Inputs(this);
  }

  get outputs(): CreateSpreadsMarketCall__Outputs {
    return new CreateSpreadsMarketCall__Outputs(this);
  }
}

export class CreateSpreadsMarketCall__Inputs {
  _call: CreateSpreadsMarketCall;

  constructor(call: CreateSpreadsMarketCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get underdog(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get line(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateSpreadsMarketCall__Outputs {
  _call: CreateSpreadsMarketCall;

  constructor(call: CreateSpreadsMarketCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateTotalsMarketCall extends ethereum.Call {
  get inputs(): CreateTotalsMarketCall__Inputs {
    return new CreateTotalsMarketCall__Inputs(this);
  }

  get outputs(): CreateTotalsMarketCall__Outputs {
    return new CreateTotalsMarketCall__Outputs(this);
  }
}

export class CreateTotalsMarketCall__Inputs {
  _call: CreateTotalsMarketCall;

  constructor(call: CreateTotalsMarketCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get line(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateTotalsMarketCall__Outputs {
  _call: CreateTotalsMarketCall;

  constructor(call: CreateTotalsMarketCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateWinnerMarketCall extends ethereum.Call {
  get inputs(): CreateWinnerMarketCall__Inputs {
    return new CreateWinnerMarketCall__Inputs(this);
  }

  get outputs(): CreateWinnerMarketCall__Outputs {
    return new CreateWinnerMarketCall__Outputs(this);
  }
}

export class CreateWinnerMarketCall__Inputs {
  _call: CreateWinnerMarketCall;

  constructor(call: CreateWinnerMarketCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateWinnerMarketCall__Outputs {
  _call: CreateWinnerMarketCall;

  constructor(call: CreateWinnerMarketCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class EmergencyResolveMarketCall extends ethereum.Call {
  get inputs(): EmergencyResolveMarketCall__Inputs {
    return new EmergencyResolveMarketCall__Inputs(this);
  }

  get outputs(): EmergencyResolveMarketCall__Outputs {
    return new EmergencyResolveMarketCall__Outputs(this);
  }
}

export class EmergencyResolveMarketCall__Inputs {
  _call: EmergencyResolveMarketCall;

  constructor(call: EmergencyResolveMarketCall) {
    this._call = call;
  }

  get marketId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get payouts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class EmergencyResolveMarketCall__Outputs {
  _call: EmergencyResolveMarketCall;

  constructor(call: EmergencyResolveMarketCall) {
    this._call = call;
  }
}

export class EmergencySettleGameCall extends ethereum.Call {
  get inputs(): EmergencySettleGameCall__Inputs {
    return new EmergencySettleGameCall__Inputs(this);
  }

  get outputs(): EmergencySettleGameCall__Outputs {
    return new EmergencySettleGameCall__Outputs(this);
  }
}

export class EmergencySettleGameCall__Inputs {
  _call: EmergencySettleGameCall;

  constructor(call: EmergencySettleGameCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get home(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get away(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EmergencySettleGameCall__Outputs {
  _call: EmergencySettleGameCall;

  constructor(call: EmergencySettleGameCall) {
    this._call = call;
  }
}

export class PauseGameCall extends ethereum.Call {
  get inputs(): PauseGameCall__Inputs {
    return new PauseGameCall__Inputs(this);
  }

  get outputs(): PauseGameCall__Outputs {
    return new PauseGameCall__Outputs(this);
  }
}

export class PauseGameCall__Inputs {
  _call: PauseGameCall;

  constructor(call: PauseGameCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PauseGameCall__Outputs {
  _call: PauseGameCall;

  constructor(call: PauseGameCall) {
    this._call = call;
  }
}

export class PauseMarketCall extends ethereum.Call {
  get inputs(): PauseMarketCall__Inputs {
    return new PauseMarketCall__Inputs(this);
  }

  get outputs(): PauseMarketCall__Outputs {
    return new PauseMarketCall__Outputs(this);
  }
}

export class PauseMarketCall__Inputs {
  _call: PauseMarketCall;

  constructor(call: PauseMarketCall) {
    this._call = call;
  }

  get marketId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PauseMarketCall__Outputs {
  _call: PauseMarketCall;

  constructor(call: PauseMarketCall) {
    this._call = call;
  }
}

export class PriceDisputedCall extends ethereum.Call {
  get inputs(): PriceDisputedCall__Inputs {
    return new PriceDisputedCall__Inputs(this);
  }

  get outputs(): PriceDisputedCall__Outputs {
    return new PriceDisputedCall__Outputs(this);
  }
}

export class PriceDisputedCall__Inputs {
  _call: PriceDisputedCall;

  constructor(call: PriceDisputedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get ancillaryData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PriceDisputedCall__Outputs {
  _call: PriceDisputedCall;

  constructor(call: PriceDisputedCall) {
    this._call = call;
  }
}

export class PriceSettledCall extends ethereum.Call {
  get inputs(): PriceSettledCall__Inputs {
    return new PriceSettledCall__Inputs(this);
  }

  get outputs(): PriceSettledCall__Outputs {
    return new PriceSettledCall__Outputs(this);
  }
}

export class PriceSettledCall__Inputs {
  _call: PriceSettledCall;

  constructor(call: PriceSettledCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get ancillaryData(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class PriceSettledCall__Outputs {
  _call: PriceSettledCall;

  constructor(call: PriceSettledCall) {
    this._call = call;
  }
}

export class RemoveAdminCall extends ethereum.Call {
  get inputs(): RemoveAdminCall__Inputs {
    return new RemoveAdminCall__Inputs(this);
  }

  get outputs(): RemoveAdminCall__Outputs {
    return new RemoveAdminCall__Outputs(this);
  }
}

export class RemoveAdminCall__Inputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAdminCall__Outputs {
  _call: RemoveAdminCall;

  constructor(call: RemoveAdminCall) {
    this._call = call;
  }
}

export class RenounceAdminCall extends ethereum.Call {
  get inputs(): RenounceAdminCall__Inputs {
    return new RenounceAdminCall__Inputs(this);
  }

  get outputs(): RenounceAdminCall__Outputs {
    return new RenounceAdminCall__Outputs(this);
  }
}

export class RenounceAdminCall__Inputs {
  _call: RenounceAdminCall;

  constructor(call: RenounceAdminCall) {
    this._call = call;
  }
}

export class RenounceAdminCall__Outputs {
  _call: RenounceAdminCall;

  constructor(call: RenounceAdminCall) {
    this._call = call;
  }
}

export class ResetGameCall extends ethereum.Call {
  get inputs(): ResetGameCall__Inputs {
    return new ResetGameCall__Inputs(this);
  }

  get outputs(): ResetGameCall__Outputs {
    return new ResetGameCall__Outputs(this);
  }
}

export class ResetGameCall__Inputs {
  _call: ResetGameCall;

  constructor(call: ResetGameCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ResetGameCall__Outputs {
  _call: ResetGameCall;

  constructor(call: ResetGameCall) {
    this._call = call;
  }
}

export class ResolveMarketCall extends ethereum.Call {
  get inputs(): ResolveMarketCall__Inputs {
    return new ResolveMarketCall__Inputs(this);
  }

  get outputs(): ResolveMarketCall__Outputs {
    return new ResolveMarketCall__Outputs(this);
  }
}

export class ResolveMarketCall__Inputs {
  _call: ResolveMarketCall;

  constructor(call: ResolveMarketCall) {
    this._call = call;
  }

  get marketId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ResolveMarketCall__Outputs {
  _call: ResolveMarketCall;

  constructor(call: ResolveMarketCall) {
    this._call = call;
  }
}

export class SetBondCall extends ethereum.Call {
  get inputs(): SetBondCall__Inputs {
    return new SetBondCall__Inputs(this);
  }

  get outputs(): SetBondCall__Outputs {
    return new SetBondCall__Outputs(this);
  }
}

export class SetBondCall__Inputs {
  _call: SetBondCall;

  constructor(call: SetBondCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get bond(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetBondCall__Outputs {
  _call: SetBondCall;

  constructor(call: SetBondCall) {
    this._call = call;
  }
}

export class SetLivenessCall extends ethereum.Call {
  get inputs(): SetLivenessCall__Inputs {
    return new SetLivenessCall__Inputs(this);
  }

  get outputs(): SetLivenessCall__Outputs {
    return new SetLivenessCall__Outputs(this);
  }
}

export class SetLivenessCall__Inputs {
  _call: SetLivenessCall;

  constructor(call: SetLivenessCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get liveness(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetLivenessCall__Outputs {
  _call: SetLivenessCall;

  constructor(call: SetLivenessCall) {
    this._call = call;
  }
}

export class UnpauseGameCall extends ethereum.Call {
  get inputs(): UnpauseGameCall__Inputs {
    return new UnpauseGameCall__Inputs(this);
  }

  get outputs(): UnpauseGameCall__Outputs {
    return new UnpauseGameCall__Outputs(this);
  }
}

export class UnpauseGameCall__Inputs {
  _call: UnpauseGameCall;

  constructor(call: UnpauseGameCall) {
    this._call = call;
  }

  get gameId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UnpauseGameCall__Outputs {
  _call: UnpauseGameCall;

  constructor(call: UnpauseGameCall) {
    this._call = call;
  }
}

export class UnpauseMarketCall extends ethereum.Call {
  get inputs(): UnpauseMarketCall__Inputs {
    return new UnpauseMarketCall__Inputs(this);
  }

  get outputs(): UnpauseMarketCall__Outputs {
    return new UnpauseMarketCall__Outputs(this);
  }
}

export class UnpauseMarketCall__Inputs {
  _call: UnpauseMarketCall;

  constructor(call: UnpauseMarketCall) {
    this._call = call;
  }

  get marketId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class UnpauseMarketCall__Outputs {
  _call: UnpauseMarketCall;

  constructor(call: UnpauseMarketCall) {
    this._call = call;
  }
}
